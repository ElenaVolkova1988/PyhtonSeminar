my_list =[1,45,63,19,24] # список, содержит любые типы данных, изменяемый, сотртированный или несортированный
# если пустой список для заполнения используем my_list.append(6)
# если for i in my_list print(i) это проходимся по элементам, а не индексам
# если нужно обратиться к индексам for i in range(len(my_list))
# print (my_list[i])
# my tuple-tuple(my_list)# неизменяемый список, обратиться можно только если по индексам пройтись
# def func[]
# a -5
# b -6
# c-7
# return a,b,c
# result1, result2-func
# print (result1)
# print (result2)
# выведет на печать отдельно 5 и отдельно 6
# если вывести нужно только а и с 
# result1,_, result2-func
# print (result1)
# print (result2)
# my_set -{123156,164,165468} множества, неупорядоченное, все элементы уникальные, дуьликатов быть не может
# my_set.add (67) это для добавления элемента в список
# my_dict- словарь, обращение идет по ключу {4:'rgg',6:'rgg','two':'jhjiov'}
# ключ может быть строка, кортеж, интеджер
# обратиться к словарю print(my_dict[4]) по ключу
# если обратились к ключу а его нет будет ошибка, чтоб ее не было  print(mt_dict.get(4, ' Ничего нет'))
# my_dict [5]-'Это пять' -добавление в словарь нового ключа
# напечатать содержание по ключам for i in my dict.values(): print(i)
# for i in my_dict.items(): print(my_dict) это печать и ключей и содержимого
# работа с файлами file= open('text.txt', 'w', encoding='UTF-8')- юфт это, что б с кирилицей работать w- записать, r-чтение
# если файла нет, он его создаст
# записать в файл file.write()
# обязательно нужно закрыть файл file.close()
# with open('text.txt', 'w', encoding='UTF-8') as data: это контекстный менеджер, чтоб не делать клоуз каждый раз


# Задайте список, и определите, есть ли там число некое вхождение( у нас текст)
text=['dbfbdfb;sdmcasjhjhf45fmds;s; dagykjyg']
search='df'

for i in range(0, len(text)):
    if search in text[i]: # in чтоб нашел только вхождение этих букв , а если == df только полное совпадение
        print( f"'В элементе с индексом: {i} - 'Да'")
        
# с методом файнд, только первое вхождение выдаст и брэйк либо >=0
print(text[0].find(search))

#  Программа, которая определит позицию второго вхождения в списке либо сообщит, что ее нет
my_list=['йцу', 'фыв','ячс', 'цук', 'йцукен']
item='йцу'
count=0
for i in range(len(my_list)):
    if(item==my_list[i]):
        count+=1
        if count==2:
            print(i)
            break
        elif (i==len(my_list)-1):
            print(-1)



